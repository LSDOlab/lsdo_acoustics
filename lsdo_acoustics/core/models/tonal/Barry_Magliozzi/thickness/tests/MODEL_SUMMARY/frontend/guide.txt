
hierarchy.txt outlines the defined model hierarchy and all defined variables in the model.
Each row is a variable (*) or model (|). If a variable is created in a model, it is indented under that model and lists (in order to the right)
the variable type (declared/registered output/created input), the promotion level, the shape, any given values, the id, the promoted name, and the unpromoted name. For more details:
                    
   | <A>
      *<B>                                                                                         <C>   /<D>    /<E>      /<F>              id:<G>       p:<H> 	(u:<I>)                                                                 in /.10/(1,)                       p:ModelA.x 	(up:ModelA.ModelB.x)

A: Model name
B: Name of a variable created in model A
C: Variable type (dec = declared, reg = registered output, in = created input)
D: Promotion level (ex: ...10 means variable B is promoted to the 4th level where A is the 5th model from the root)
E: Shape of variable B
F: The average user-given value of variable B. Only shown if the variable is an input or declared variable.          
G: The unique id number of variable B.
H: The promoted name of variable B.
I: The unpromoted name of variable B.

example:

    # Base model
    model = csdl.Model()

    # First level model
    model1 = csdl.Model()
    model.add(model1, 'ModelA', promotes = [])

    # Second level model
    model2 = csdl.Model()
    model2.create_input('x0', val=3)
    model1.add(model2, 'ModelB', promotes = ['x0'])
    model1.create_input('x1', val=2)

    # declare variable
    x0 = model.declare_variable('ModelA.x0')
    x1 = model.declare_variable('x1')
    model.connect('ModelA.x1', 'x1')
    model.register_output('y', x0**2 + x1**2)
                    
has a hierarchy.txt that looks like:
| <SYSTEM LEVEL>
   *y                                                                                               out  /.     /(1,)      /                   id:6       p:y 	(u:y)
   *x1                                                                                              dec  /.     /(1,)      /default            id:3       p:x1 	(u:x1)
   *ModelA.x0                                                                                       dec  /.     /(1,)      /default            id:2       p:ModelA.x0 	(u:ModelA.x0)
   | ModelA
      *x1                                                                                           in   /.0    /(1,)      /2.000              id:1       p:ModelA.x1 	(u:ModelA.x1)
      | ModelB
         *x0                                                                                        in   /.10   /(1,)      /3.000              id:0       p:ModelA.x0 	(u:ModelA.ModelB.x0)

We can see that the promoted name "ModelA.x0" (right of 'p:') is listed twice, meaning they get promoted to the same variable.
                    
promotions_connections.txt contains all variables merged due to promotions and connections. For the above example, it looks like:
                    
(id:1)                source     in     ModelA.x1
 <=c=(id:3)           connection dec    x1

(id:0)                source     in     ModelA.ModelB.x0
 <---(id:2)           promotion  dec    ModelA.x0

We can see that the promotion of "ModelA.x0" as before is listed here, and the connection of "ModelA.x1" to "x1" is also listed here.
                    
